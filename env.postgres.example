# PostgreSQL Database Configuration Example
# Copy this to .env and update with your PostgreSQL database credentials

# Database Configuration
DB_DIALECT=postgres
DB_HOST=localhost
DB_PORT=5432
DB_DATABASE=your_database_name
DB_USER=your_postgresql_user
DB_PASSWORD=your_postgresql_password

# Server Configuration
PORT=3000

# Permission Mode - Controls what SQL operations are allowed
# Options: read-only, read-write, full
# - read-only: Only SELECT and read operations (safe for data exploration)
# - read-write: SELECT, INSERT, UPDATE (safe for data entry, no deletions)
# - full: All SQL operations including DROP, DELETE, ALTER, CREATE
DB_MODE=read-only
NEXT_PUBLIC_DB_MODE=read-only

# OpenAI Configuration (for natural language to SQL generation)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# Example PostgreSQL connection strings:
# - Local PostgreSQL: localhost:5432
# - PostgreSQL with custom port: localhost:5433
# - Remote PostgreSQL: your-postgresql-server.com:5432
# - PostgreSQL with SSL: your-postgresql-server.com:5432?sslmode=require

# Notes:
# - Make sure your PostgreSQL server is running and accessible
# - The user must have SELECT, INSERT, UPDATE, DELETE privileges on the database
# - For schema introspection, the user needs access to pg_catalog and information_schema views
# - SSL connections are recommended for production
# - For SSL, you can set `DB_SSL=true` and provide certificates if necessary

# Example SSL Configuration (if required):
# DB_SSL=true
# DB_SSL_CERT_PATH=/path/to/certificate.crt
# DB_SSL_KEY_PATH=/path/to/private.key
# DB_SSL_CA_PATH=/path/to/ca-certificate.crt
